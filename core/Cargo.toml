[package]
build = "build.rs"
name = "acme-core"

authors.workspace = true
categories.workspace = true
description.workspace = true
edition.workspace = true
homepage.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
version.workspace = true

[package.metadata.docs.rs]
all-features = false
features = ["full"]
rustc-args = ["--cfg", "docsrs"]


[features]
default = [
    "std"
]

full = [
    "default",
    "anyhow",
    "json",
    "serde"
]

# ********* [FF] Dependencies *********
alloc = [
    "serde?/alloc",
    "serde_json?/alloc",
    "time?/alloc",
]

anyhow = [ "dep:anyhow" ]

chrono = [
    "dep:chrono",
    "std",
    "time",
]

json = [
    "alloc",
    "dep:serde_json",
]

rand = [
    "dep:rand",
    "dep:rand_distr",
    "rng",
    "time?/rand"
]

rng = [
    "dep:getrandom",
    "rand?/small_rng",
    "rand?/thread_rng",
    "uuid?/v4",
]

serde = [
    "dep:serde",
    "dep:serde_derive",
    "time?/serde",
]

time = ["dep:time"]

uuid = [
    "dep:uuid",
    "rng"
]

# ********* [FF] Environments *********
std = [
    "alloc",
    "anyhow?/std",
    "rand?/std",
    "rand?/std_rng",
    "serde?/std",
    "serde_json?/std",
    "strum/std",
    "thiserror/std",
    "time?/std",
    "uuid?/std"
]

wasm = [
    "chrono?/wasmbind",
    "getrandom?/wasm_js",
    "time?/wasm-bindgen",
    "uuid?/js"
]

[dependencies]
# data & serialization
serde = { features = ["derive"], optional = true, workspace = true }
serde_derive = { optional = true, workspace = true }
serde_json = { optional = true, workspace = true }
# error handling
anyhow = { optional = true, workspace = true }
thiserror = { workspace = true }
# macros
paste = { workspace = true }
smart-default = { workspace = true }
strum = { features = ["derive"], workspace = true }
# time
chrono = { optional = true, workspace = true }
time = { optional = true, workspace = true }
# random
getrandom = { optional = true, workspace = true }
rand = { optional = true, workspace = true }
rand_distr = { optional = true, workspace = true }
uuid = { optional = true, workspace = true }

# ********* [tests] *********
[[test]]
name = "default"