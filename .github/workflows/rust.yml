name: rust

concurrency:   
  cancel-in-progress: false
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

on:
  pull_request:
    branches: [ main, master ]
    types: [ opened, synchronize, reopened ]
    paths:
      - '**/workflows/rust.yml'
      - '**/*.rs'
      - '**/Cargo.*'
  push:
    branches: [ main, master ]
    tags: [ latest, v*, "*-nightly" ]
  repository_dispatch:
    types: [ rust ]
  workflow_dispatch:

permissions: 
  contents: read
  deployments: read

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:  [ ubuntu-latest ] # [ ubuntu-latest, macos-latest, windows-latest ]
        target: [ x86_64-unknown-linux-gnu, wasm32-wasip1, wasm32-wasip2 ]
    runs-on: ${{ matrix.os }}
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          cache-workspaces: true
          target: ${{ matrix.target }}
      - 
        name: Build
        run: cargo build -r -v --workspace --locked --features full --target ${{ matrix.target }}
  test:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        os:  [ ubuntu-latest ]
        toolchain: [ stable, nightly ]
    runs-on: ${{ matrix.os }}
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          cache-workspaces: true
          toolchain: ${{ matrix.toolchain }}
          override: true
      - 
        name: Test (default)
        run: cargo t -q -r --workspace --locked
      - 
        name: Test (full)
        run: cargo t -q -r --workspace --locked --features full
      - 
        name: Test (alloc)
        if: matrix.toolchain == 'nightly'
        continue-on-error: true
        env:
          RUSTFLAGS: "-C panic=abort -Z panic_abort_tests"
        run: cargo t -q -r --workspace --locked --no-default-features --features alloc
      - 
        name: Test (no_std)
        continue-on-error: true
        if: matrix.toolchain == 'nightly'
        env:
          RUSTFLAGS: "-C panic=abort -Z panic_abort_tests"
        run: cargo t -q -r --workspace --locked --no-default-features
  benchmark:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        os:  [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          cache-workspaces: true
      - 
        name: Benchmark
        run: cargo bench --verbose --workspace --features full
